name: CI

on:
  push:
    branches: [ main, feat/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    name: CI / Unit tests (not integration)
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src
      ANALYST_ENABLED: "0"          # force offline fallback in tests
      HF_HUB_DISABLE_PROGRESS_BARS: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # keep pytest out of requirements.txt
          pip install pytest

      - name: Run unit tests
        run: |
          pytest -q -m "not integration" --disable-warnings --maxfail=1

  integration:
    name: CI / Integration tests (graceful if none)
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src
      ANALYST_ENABLED: "0"          # avoid LLM/network in CI
      HF_HUB_DISABLE_PROGRESS_BARS: "1"
      # Uncomment if you later add integration tests that need secrets:
      # OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      # FMP_API_KEY: ${{ secrets.FMP_API_KEY }}
      # REPORTER_MODEL: ${{ secrets.REPORTER_MODEL }}
      # REPORTER_TEMPERATURE: ${{ secrets.REPORTER_TEMPERATURE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run integration tests (pass if none)
        shell: bash
        run: |
          set -e
          pytest -q -m "integration" --disable-warnings --maxfail=1 || rc=$?
          # pytest: 0=ok, 1=fails, 5=no tests collected
          if [[ "${rc:-0}" -eq 5 ]]; then
            echo "No integration tests collected. Marking job as success."
            exit 0
          else
            exit "${rc:-0}"
          fi
