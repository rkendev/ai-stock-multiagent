name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  unit:
    name: Unit tests (no network)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # Minimal dummy env so reporter code paths can import safely.
      - name: Run unit tests
        env:
          OPENAI_API_KEY: dummy
          REPORTER_MODEL: gpt-4o-mini
          REPORTER_TEMPERATURE: "0.2"
        run: |
          PYTHONPATH=src pytest -q -m "unit" --disable-warnings --maxfail=1

  integration:
    name: Integration tests (network OK)
    # Only on main and manual runs to keep PRs fast
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest yfinance

      - name: Run integration tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPORTER_MODEL: ${{ vars.REPORTER_MODEL }}
          REPORTER_TEMPERATURE: ${{ vars.REPORTER_TEMPERATURE }}
        run: |
          PYTHONPATH=src pytest -q -m "integration" --disable-warnings --maxfail=1
